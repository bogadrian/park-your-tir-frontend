{"version":3,"sources":["components/reuseble/custom-button/custom-button.js","utils/validators.js","components/reuseble/input-form/input-form.js","components/reuseble/backdrop/backdrop.js","components/reuseble/modal/modal.js","redux/coordsReducer/coords-selector.js","components/reuseble/ImageUpload/image-upload.js","redux/appis/apiUtils.js","components/reuseble/fetch-address/fetch-address.js","components/main/place-data/place-data.js","components/reuseble/fetch-coords/fetch-coords.js","components/reuseble/address/address.js","components/main/home-places/upload3photo/upload3photo.js","components/main/home-places/star-rating/star-rating.js","pages/create-place/create-place.js"],"names":["CustomButton","children","otherProps","className","disabled","onClick","handleClick","VALIDATOR_MINLENGTH","val","type","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","FormInput","label","useReducer","inputState","dispatch","id","onInput","useEffect","handleChange","e","target","touchHandler","cond1","cond2","classesInput","join","element","onChange","onBlur","rows","classes","texterror","Backdrop","props","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","style","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","secondButton","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","selectCoords","coords","selectAddress","createSelector","address","selectCoordsFunc","selectCoordsFull","ImageUpload","useState","file","setFile","setIsValid","preview","setPreview","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","accept","ref","name","display","photo","files","src","alt","current","click","url","process","fetchAddressFromCoords","latlng","a","axios","get","response","fetchCoordsFromAdress","config","headers","data","urlAddress","connect","startFetchCoords","startSetAddressToDisplay","setAddress","coordinates","setCoords","handleInput","useCallback","fetchAddress","lat","lng","add","required","setNameStart","setDescStart","desc","setName","setDesc","handleName","handleDesc","usePosition","latitude","longitude","fetchCoords","undefined","mapStateToProps","createStructuredSelector","startPhoto","fileImg","fileHandler","withRouter","place","ratingStart","rating","startCreate","history","setRating","setShow","push","starRatedColor","changeRating","newRating","numberOfStars","starDimension","starSpacing","CreatePlace","activeItemIndex","setActiveItemIndex","padding","requestToChangeActive","numberOfCards","gutter","leftChevron","rightChevron","outsideChevron","chevronWidth","height","textAlign"],"mappings":"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","file":"static/js/4.078ea98c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './custom-button.scss';\r\n\r\nconst CustomButton = ({ children, ...otherProps }) => {\r\n  return (\r\n    <button\r\n      className={`${otherProps.disabled ? 'disabled' : ''} custom-button`}\r\n      onClick={otherProps.handleClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\n\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\r\nimport { validate } from '../../../utils/validators';\r\n\r\nimport './input-form.scss';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case 'TOUCH':\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst FormInput = ({ label, ...otherProps }) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: '',\r\n    isTouched: false,\r\n    isValid: false,\r\n  });\r\n\r\n  const { id, onInput } = otherProps;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const handleChange = (e) => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: e.target.value,\r\n      validators: otherProps.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({ type: 'TOUCH' });\r\n  };\r\n\r\n  const cond1 = `${inputState.value.length > 0 ? 'shrink' : ''}`;\r\n  const cond2 = `${\r\n    !inputState.isValid && inputState.isTouched ? 'danger' : ''\r\n  } `;\r\n  const cond3 = 'form-input-label';\r\n  const cond4 = 'form-input';\r\n  const classesInput = [cond4, cond2].join(' ');\r\n\r\n  const element =\r\n    otherProps.element === 'input' ? (\r\n      <input\r\n        className={classesInput}\r\n        id={otherProps.id}\r\n        onChange={handleChange}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n        type={otherProps.id}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        className={classesInput}\r\n        id={otherProps.id}\r\n        onChange={handleChange}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n        type={otherProps.id}\r\n        rows={otherProps.rows || 3}\r\n      />\r\n    );\r\n\r\n  const classes = [cond1, cond2, cond3].join(' ');\r\n\r\n  return (\r\n    <div className=\"group\">\r\n      {element}\r\n      {!inputState.isValid ? (\r\n        <p className={cond2}>{otherProps.texterror}</p>\r\n      ) : null}\r\n\r\n      {label ? <label className={classes}>{label}</label> : null}\r\n    </div>\r\n  );\r\n};\r\nexport default FormInput;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './backdrop.scss';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from '../backdrop/backdrop';\r\nimport './modal.scss';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          <h2> {props.children}</h2>\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          <div className=\"modal-footer\">\r\n            <div>{props.footer}</div>\r\n            <div>\r\n              {props.secondButton ? <div>{props.secondButton}</div> : null}\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectCoords = state => state.coords;\r\n\r\nexport const selectAddress = createSelector(\r\n  [selectCoords],\r\n  address => address.address\r\n);\r\n\r\nexport const selectCoordsFunc = createSelector(\r\n  [selectCoords],\r\n  coords => coords.coords\r\n);\r\n\r\nexport const selectCoordsFull = createSelector(\r\n  [selectCoords],\r\n  coords => coords\r\n);\r\n","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport './image-upload.scss';\r\nimport CustomButton from '../custom-button/custom-button';\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState(null);\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [preview, setPreview] = useState(null);\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreview(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickImage = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  const fileHandler = e => {\r\n    const photo = e.target.files[0];\r\n    if (!photo && photo === 0) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n    setFile(photo);\r\n    props.onInput(photo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"image-upload\">\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        ref={filePickerRef}\r\n        id=\"photo\"\r\n        name=\"photo\"\r\n        style={{ display: 'none' }}\r\n        onChange={fileHandler}\r\n      />\r\n      <div className=\"image-container\">\r\n        {preview && <img src={preview} className=\"image\" alt=\"Preview\" />}\r\n      </div>\r\n      {!preview && <p>Please choose a photo</p>}\r\n      <CustomButton type=\"button\" disabled={isValid} handleClick={pickImage}>\r\n        Upload a image\r\n      </CustomButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import axios from 'axios';\r\n//import runtimeEnv from '@mars/heroku-js-runtime-env';\r\nconst url = process.env.REACT_APP_URL;\r\n\r\nexport const fetchAddressFromCoords = async latlng => {\r\n  // const env = runtimeEnv();\r\n\r\n  const response = await axios.get(\r\n    `${url}/api/v1/places/addressByCoords/${latlng}`\r\n  );\r\n\r\n  return response;\r\n};\r\n\r\nexport const fetchCoordsFromAdress = async address => {\r\n  //const env = runtimeEnv();\r\n  const config = {\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  const data = address;\r\n\r\n  const urlAddress = `${url}/api/v1/places/coordByAdress/${address}`;\r\n\r\n  const response = await axios.get(urlAddress, data, config);\r\n\r\n  return response;\r\n};\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CustomButton from '../custom-button/custom-button';\r\nimport FormInput from '../input-form/input-form';\r\nimport { VALIDATOR_MINLENGTH } from '../../../utils/validators';\r\nimport {\r\n  fetchAddressFromCoords,\r\n  fetchCoordsFromAdress\r\n} from '../../../redux/appis/apiUtils';\r\nimport {\r\n  startFetchCoords,\r\n  startSetAddressToDisplay\r\n} from '../../../redux/coordsReducer/coords-action';\r\n\r\nimport './fetch-address.scss';\r\n\r\nconst FetchAddress = ({ startFetchCoords, startSetAddressToDisplay }) => {\r\n  const [address, setAddress] = useState(null);\r\n  const [coordinates, setCoords] = useState(null);\r\n\r\n  const handleInput = useCallback((id, value, isValid) => {\r\n    setAddress(value);\r\n  }, []);\r\n\r\n  const fetchAddress = async e => {\r\n    e.preventDefault();\r\n    //make call to server with address, wait for response and put it on store\r\n    if (address) {\r\n      const coords = await fetchCoordsFromAdress(address);\r\n\r\n      const { lat, lng } = coords.data.data;\r\n      const latlng = `${lat},${lng}`;\r\n\r\n      const add = await fetchAddressFromCoords(latlng);\r\n      startSetAddressToDisplay(add.data.data);\r\n      if (coords.data.data) {\r\n        setCoords(coords.data.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    startFetchCoords(coordinates);\r\n  }, [coordinates, startFetchCoords]);\r\n\r\n  return (\r\n    <div className=\"address-container\">\r\n      <div className=\"gro\">\r\n        <form>\r\n          <FormInput\r\n            id=\"input\"\r\n            element=\"input\"\r\n            label=\"City Name, Streat, Number\"\r\n            texterror=\"Search Parking Arround An Address\"\r\n            validators={[VALIDATOR_MINLENGTH(2)]}\r\n            onInput={handleInput}\r\n            required={true}\r\n          />\r\n\r\n          <CustomButton type=\"submit\" handleClick={fetchAddress}>\r\n            Find Address\r\n          </CustomButton>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  startFetchCoords: coords => dispatch(startFetchCoords(coords)),\r\n  startSetAddressToDisplay: address =>\r\n    dispatch(startSetAddressToDisplay(address))\r\n});\r\nexport default connect(null, mapDispatchToProps)(FetchAddress);\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormInput from '../../reuseble/input-form/input-form';\r\nimport { VALIDATOR_MINLENGTH } from '../../../utils/validators';\r\n\r\nimport {\r\n  setNameStart,\r\n  setDescStart\r\n} from '../../../redux/coordsReducer/coords-action';\r\nimport './place-data.scss';\r\n\r\nconst PlaceDataName = ({ setNameStart, setDescStart, ...props }) => {\r\n  const [name, setName] = useState(null);\r\n  const [desc, setDesc] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setNameStart(name);\r\n    setDescStart(desc);\r\n  }, [setNameStart, setDescStart, desc, name]);\r\n\r\n  const handleName = useCallback((id, value) => {\r\n    setName(value);\r\n  }, []);\r\n\r\n  const handleDesc = useCallback((id, value) => {\r\n    setDesc(value);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"inputs\">\r\n        <h2>{props.name}</h2>\r\n        <FormInput\r\n          id=\"name\"\r\n          element=\"input\"\r\n          texterror=\"Please enter a tilte for this place\"\r\n          validators={[VALIDATOR_MINLENGTH(3)]}\r\n          onInput={handleName}\r\n          label=\"Title\"\r\n          required\r\n        />\r\n        <h2>{props.desc}</h2>\r\n        <FormInput\r\n          id=\"text\"\r\n          element=\"input\"\r\n          texterror=\"Please enter a description for this place\"\r\n          validators={[VALIDATOR_MINLENGTH(3)]}\r\n          onInput={handleDesc}\r\n          label=\"Place Description\"\r\n          rows={3}\r\n          required\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setNameStart: name => dispatch(setNameStart(name)),\r\n  setDescStart: desc => dispatch(setDescStart(desc))\r\n});\r\nexport default connect(null, mapDispatchToProps)(PlaceDataName);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { usePosition } from 'use-position';\r\nimport CustomButton from '../custom-button/custom-button';\r\n\r\nimport { fetchAddressFromCoords } from '../../../redux/appis/apiUtils';\r\nimport {\r\n  startFetchCoords,\r\n  startSetAddressToDisplay\r\n} from '../../../redux/coordsReducer/coords-action';\r\n\r\nconst FetchCoords = ({ startFetchCoords, startSetAddressToDisplay }) => {\r\n  const { latitude, longitude } = usePosition();\r\n  const [coordinates, setCoords] = useState(null);\r\n\r\n  let latlng = `${latitude},${longitude}`;\r\n\r\n  const fetchCoords = async () => {\r\n    if (latlng !== undefined) {\r\n      const add = await fetchAddressFromCoords(latlng);\r\n\r\n      setCoords({ lat: latitude, lng: longitude });\r\n      startSetAddressToDisplay(add.data.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    startFetchCoords(coordinates);\r\n  }, [coordinates, startFetchCoords]);\r\n\r\n  return (\r\n    <div className=\"address-container\">\r\n      <div className=\"gro\">\r\n        <CustomButton type=\"submit\" handleClick={fetchCoords}>\r\n          Create a place where you are now!\r\n        </CustomButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  startFetchCoords: coords => dispatch(startFetchCoords(coords)),\r\n  startSetAddressToDisplay: address =>\r\n    dispatch(startSetAddressToDisplay(address))\r\n});\r\nexport default connect(null, mapDispatchToProps)(FetchCoords);\r\n","import React from 'react';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FetchAddress from '../fetch-address/fetch-address';\r\nimport FetchCoords from '../fetch-coords/fetch-coords';\r\nimport { selectAddress } from '../../../redux/coordsReducer/coords-selector';\r\n\r\nimport './address.scss';\r\n\r\nconst Address = ({ address }) => {\r\n  return (\r\n    <div className=\"address-container\">\r\n      <div className=\"gro\">\r\n        <h2>{address}</h2>\r\n        <FetchAddress />\r\n        <FetchCoords />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = createStructuredSelector({\r\n  address: selectAddress\r\n});\r\nexport default connect(mapStateToProps)(Address);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ImageUpload from '../../../reuseble/ImageUpload/image-upload';\r\nimport { startPhoto } from '../../../../redux/coordsReducer/coords-action';\r\n\r\nimport './upload3photo.scss';\r\n\r\nconst Upload3Photo = ({ startPhoto, ...props }) => {\r\n  const [fileImg, setFile] = useState([]);\r\n\r\n  useEffect(() => {\r\n    startPhoto(fileImg);\r\n  }, [fileImg, startPhoto]);\r\n\r\n  const fileHandler = file => {\r\n    setFile([...fileImg, file]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload3\">\r\n      <ImageUpload onInput={fileHandler} />\r\n      <ImageUpload onInput={fileHandler} />\r\n      <ImageUpload onInput={fileHandler} />\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  startPhoto: photo => dispatch(startPhoto(photo))\r\n});\r\nexport default connect(null, mapDispatchToProps)(Upload3Photo);\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport StarRatings from 'react-star-ratings';\r\nimport CustomButton from '../../../reuseble/custom-button/custom-button';\r\nimport { ratingStart } from '../../../../redux/coordsReducer/coords-action';\r\nimport { startCreate } from '../../../../redux/setPlace/setPlace-action';\r\nimport Modal from '../../../reuseble/modal/modal';\r\n\r\nimport './star-rating.scss';\r\n\r\nconst StarRating = ({ place, startCreate, ratingStart, history, ...props }) => {\r\n  const [rating, setRating] = useState(0);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const changeRating = newRating => {\r\n    setRating(newRating);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    startCreate(place);\r\n    setShow(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    ratingStart(rating);\r\n  }, [rating, ratingStart]);\r\n\r\n  const handleError = () => {\r\n    setShow(false);\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Modal\r\n        show={show}\r\n        header=\"Place Updated\"\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<CustomButton handleClick={handleError}>CLOSE</CustomButton>}\r\n      >\r\n        \"The Place was updated!\"\r\n      </Modal>\r\n      <div className=\"star-rating\">\r\n        <StarRatings\r\n          rating={rating}\r\n          starRatedColor=\"blue\"\r\n          changeRating={changeRating}\r\n          numberOfStars={6}\r\n          name=\"rating\"\r\n          starDimension=\"40px\"\r\n          starSpacing=\"15px\"\r\n        />\r\n      </div>\r\n      <div className=\"button\">\r\n        <CustomButton handleClick={handleClick}>Create Place</CustomButton>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = ({ coords }) => ({\r\n  place: coords\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  ratingStart: rating => dispatch(ratingStart(rating)),\r\n  startCreate: place => dispatch(startCreate(place))\r\n});\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(StarRating)\r\n);\r\n","import React, { useState } from 'react';\r\n\r\nimport Address from '../../components/reuseble/address/address';\r\nimport PlaceDataName from '../../components/main/place-data/place-data';\r\nimport Upload3Photo from '../../components/main/home-places/upload3photo/upload3photo';\r\nimport StarRating from '../../components/main/home-places/star-rating/star-rating';\r\n\r\nimport ItemsCarousel from 'react-items-carousel';\r\nimport CustomButton from '../../components/reuseble/custom-button/custom-button';\r\n\r\nimport './create-place.scss';\r\n\r\nconst CreatePlace = props => {\r\n  const [activeItemIndex, setActiveItemIndex] = useState(0);\r\n  const chevronWidth = 40;\r\n  return (\r\n    <div className=\"place-container\">\r\n      <div>\r\n        <h2 className=\"create-place-headline\">\r\n          You can create a place filling the adress or just allowing the\r\n          geolocation on your device to fetch your actual position\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <div\r\n          className=\"chevron-carusel\"\r\n          style={{ padding: `0 ${chevronWidth}px` }}\r\n        >\r\n          <ItemsCarousel\r\n            requestToChangeActive={setActiveItemIndex}\r\n            activeItemIndex={activeItemIndex}\r\n            numberOfCards={1}\r\n            gutter={20}\r\n            leftChevron={<CustomButton>{'<PREV'}</CustomButton>}\r\n            rightChevron={<CustomButton>{'NEXT>'}</CustomButton>}\r\n            outsideChevron\r\n            chevronWidth={chevronWidth}\r\n          >\r\n            <div style={{ height: 500 }}>\r\n              <Address />\r\n            </div>\r\n            <div style={{ height: 500 }}>\r\n              <PlaceDataName />\r\n            </div>\r\n            <div style={{ height: 500 }}>\r\n              <Upload3Photo />\r\n            </div>\r\n            <div style={{ height: 500 }}>\r\n              <h1 style={{ textAlign: 'center' }}>\r\n                Please give a rating to this place!\r\n              </h1>\r\n              <StarRating />\r\n            </div>\r\n          </ItemsCarousel>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePlace;\r\n"],"sourceRoot":""}
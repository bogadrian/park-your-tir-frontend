{"version":3,"sources":["components/reuseble/custom-button/custom-button.js","utils/validators.js","components/reuseble/input-form/input-form.js","components/reuseble/backdrop/backdrop.js","components/reuseble/modal/modal.js","redux/fetchPlace/fetchPlace-selector.js","pages/place/star-rate/star-rate.js","components/comment/comment.js","pages/place/place-iframe/place-iframe.js","pages/place/author-name/author-name.js","redux/getComments/getComments-selector.js","redux/setComment/setComment-selector.js","components/getCommentsComp/getCommentsComp.js","pages/place/update-place/update-place.js","pages/place/place.js"],"names":["CustomButton","children","otherProps","className","disabled","onClick","handleClick","VALIDATOR_MINLENGTH","val","type","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","FormInput","label","useReducer","inputState","dispatch","id","onInput","useEffect","handleChange","e","target","touchHandler","cond1","cond2","classesInput","join","element","onChange","onBlur","rows","classes","texterror","Backdrop","props","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","style","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","secondButton","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","selectPlace","fetchPlace","selectPlaceItem","createSelector","place","placeResult","error","mapStateToProps","createStructuredSelector","connect","interactive","total","rating","ratingsAverage","ratingsQuantity","startComment","data","useState","setShow","setRating","commentValue","setCommentValue","valid","setValid","required","starRatedColor","changeRating","newRating","numberOfStars","name","starDimension","starSpacing","startFetch","placeId","lat","lng","useParams","position","coordinates","err","console","log","title","width","height","frameBorder","border","src","process","allowFullScreen","placeAuthor","color","photo","alt","selectComments","comments","selectComment","comment","user","selectUser","me","selectMe","getCommentsStart","startUpdateComment","startDeleteComment","commentMeId","com","message","setMessage","dis","setDisabled","text","setText","currentUser","_id","handleChangeText","map","co","key","cols","defaultValue","autoFocus","author","commentId","UpdateDeletePlaceWithRouter","withRouter","deletePlace","history","confirm","setConfirm","push","startUpdatePlace","placeData","window","location","assign","images","description"],"mappings":"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","file":"static/js/7.59f147c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './custom-button.scss';\r\n\r\nconst CustomButton = ({ children, ...otherProps }) => {\r\n  return (\r\n    <button\r\n      className={`${otherProps.disabled ? 'disabled' : ''} custom-button`}\r\n      onClick={otherProps.handleClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\n\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\r\nimport { validate } from '../../../utils/validators';\r\n\r\nimport './input-form.scss';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case 'TOUCH':\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst FormInput = ({ label, ...otherProps }) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: '',\r\n    isTouched: false,\r\n    isValid: false,\r\n  });\r\n\r\n  const { id, onInput } = otherProps;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const handleChange = (e) => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: e.target.value,\r\n      validators: otherProps.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({ type: 'TOUCH' });\r\n  };\r\n\r\n  const cond1 = `${inputState.value.length > 0 ? 'shrink' : ''}`;\r\n  const cond2 = `${\r\n    !inputState.isValid && inputState.isTouched ? 'danger' : ''\r\n  } `;\r\n  const cond3 = 'form-input-label';\r\n  const cond4 = 'form-input';\r\n  const classesInput = [cond4, cond2].join(' ');\r\n\r\n  const element =\r\n    otherProps.element === 'input' ? (\r\n      <input\r\n        className={classesInput}\r\n        id={otherProps.id}\r\n        onChange={handleChange}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n        type={otherProps.id}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        className={classesInput}\r\n        id={otherProps.id}\r\n        onChange={handleChange}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n        type={otherProps.id}\r\n        rows={otherProps.rows || 3}\r\n      />\r\n    );\r\n\r\n  const classes = [cond1, cond2, cond3].join(' ');\r\n\r\n  return (\r\n    <div className=\"group\">\r\n      {element}\r\n      {!inputState.isValid ? (\r\n        <p className={cond2}>{otherProps.texterror}</p>\r\n      ) : null}\r\n\r\n      {label ? <label className={classes}>{label}</label> : null}\r\n    </div>\r\n  );\r\n};\r\nexport default FormInput;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './backdrop.scss';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from '../backdrop/backdrop';\r\nimport './modal.scss';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          <h2> {props.children}</h2>\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          <div className=\"modal-footer\">\r\n            <div>{props.footer}</div>\r\n            <div>\r\n              {props.secondButton ? <div>{props.secondButton}</div> : null}\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectPlace = state => state.fetchPlace;\r\n\r\nexport const selectPlaceItem = createSelector(\r\n  [selectPlace],\r\n  place => place.placeResult\r\n);\r\n\r\nexport const selectErrorFetchPlace = createSelector(\r\n  [selectPlace],\r\n  error => error.error\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectPlaceItem } from '../../../redux/fetchPlace/fetchPlace-selector';\r\nimport Rater from 'react-rater';\r\n\r\nimport './star-rate.scss';\r\n\r\nconst StarRate = ({ place }) => {\r\n  return (\r\n    <div>\r\n      <Rater\r\n        className=\"react-rater-star react-rater\"\r\n        interactive={false}\r\n        total={6}\r\n        rating={place.ratingsAverage}\r\n      />\r\n      <div>\r\n        <h3>Number of votes: {place.ratingsQuantity}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = createStructuredSelector({\r\n  place: selectPlaceItem\r\n});\r\n\r\nexport default connect(mapStateToProps)(StarRate);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport StarRatings from 'react-star-ratings';\r\nimport FormInput from '../reuseble/input-form/input-form';\r\nimport CustomButton from '../../components/reuseble/custom-button/custom-button';\r\nimport { VALIDATOR_MINLENGTH } from '../../utils/validators';\r\nimport Modal from '../reuseble/modal/modal';\r\nimport { startComment } from '../../redux/setComment/setComment-actions';\r\n\r\nimport './comment.scss';\r\n\r\nconst Comment = ({ startComment, ...props }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [rating, setRating] = useState(0);\r\n  let [commentValue, setCommentValue] = useState('');\r\n  const [valid, setValid] = useState(false);\r\n\r\n  const handleInput = (id, value, isValid) => {\r\n    setValid(!isValid);\r\n    setCommentValue(value);\r\n  };\r\n\r\n  const changeRating = (newRating) => {\r\n    setRating(newRating);\r\n  };\r\n\r\n  const id = props.id;\r\n\r\n  const data = { id, commentValue, rating };\r\n\r\n  const handleComment = () => {\r\n    startComment(data);\r\n    setShow(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-container\">\r\n      <Modal\r\n        show={show}\r\n        header=\"Comment\"\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<CustomButton handleClick={handleClose}>CLOSE</CustomButton>}\r\n      >\r\n        The comment was posted!\r\n      </Modal>\r\n      <div>\r\n        <FormInput\r\n          id=\"input\"\r\n          element=\"input\"\r\n          label=\"comment\"\r\n          texterror=\"Please write a comment\"\r\n          validators={[VALIDATOR_MINLENGTH(2)]}\r\n          onInput={handleInput}\r\n          required={true}\r\n          value={commentValue}\r\n        />\r\n      </div>\r\n      <div>\r\n        <h3>Please Rate This Place!</h3>\r\n      </div>\r\n      <div className=\"star-rating\">\r\n        <StarRatings\r\n          rating={rating}\r\n          starRatedColor=\"orange\"\r\n          changeRating={changeRating}\r\n          numberOfStars={6}\r\n          name=\"rating\"\r\n          starDimension=\"20px\"\r\n          starSpacing=\"10px\"\r\n        />\r\n      </div>\r\n      <div className=\"button-comment-container\">\r\n        <CustomButton handleClick={handleComment} disabled={valid}>\r\n          Comment\r\n        </CustomButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  startComment: (data) => dispatch(startComment(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Comment);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import runtimeEnv from '@mars/heroku-js-runtime-env';\r\nimport { useParams } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { startFetch } from '../../../redux/fetchPlace/fetchPlace-action';\r\nimport { selectPlaceItem } from '../../../redux/fetchPlace/fetchPlace-selector';\r\nconst api = process.env.REACT_APP_EMBADED_MAP;\r\n\r\nconst PlaceIframe = ({ startFetch, place, ...props }) => {\r\n  //const env = runtimeEnv();\r\n  const placeId = useParams().placeId;\r\n  let lat;\r\n  let lng;\r\n\r\n  try {\r\n    if (place.position) {\r\n      [lat, lng] = place.position.coordinates;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n\r\n  useEffect(() => {\r\n    startFetch(placeId);\r\n  }, [startFetch, placeId]);\r\n\r\n  return (\r\n    <iframe\r\n      title=\"GooglePlace\"\r\n      width=\"600\"\r\n      height=\"450\"\r\n      frameBorder=\"0\"\r\n      style={{ border: 0 }}\r\n      src={`https://www.google.com/maps/embed/v1/place?key=${api}&q=${lng},${lat}&zoom=13\"`}\r\n      allowFullScreen\r\n    ></iframe>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  place: selectPlaceItem\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  startFetch: placeId => dispatch(startFetch(placeId))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaceIframe);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectPlaceItem } from '../../../redux/fetchPlace/fetchPlace-selector';\r\n\r\nimport './author-name.scss';\r\nconst urlActual = '${url}';\r\n\r\nconst AuthorName = ({ place }) => {\r\n  return (\r\n    <div>\r\n      {place.placeAuthor ? (\r\n        <div className=\"place-author-container\">\r\n          <div>\r\n            <h2 style={{ color: '#1c9aae' }}>{place.placeAuthor.name}</h2>\r\n\r\n            <img\r\n              className=\"place-author-image\"\r\n              src={`${urlActual}/api/v1/img/users/${place.placeAuthor.photo}`}\r\n              alt={place.placeAuthor.name}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  place: selectPlaceItem\r\n});\r\n\r\nexport default connect(mapStateToProps)(AuthorName);\r\n","import { createSelector } from 'reselect';\r\n\r\nconst commentsSelector = state => state.comments;\r\n\r\nexport const selectComments = createSelector(\r\n  [commentsSelector],\r\n  comments => comments\r\n);\r\n","import { createSelector } from 'reselect';\r\n\r\nconst commentSelector = state => state.comment;\r\n\r\nexport const selectComment = createSelector(\r\n  [commentSelector],\r\n  comment => comment\r\n);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { getCommentsStart } from '../../redux/getComments/getComments-actions';\r\nimport Rater from 'react-rater';\r\nimport Modal from '../reuseble/modal/modal';\r\nimport CustomButton from '../reuseble/custom-button/custom-button';\r\nimport { selectComments } from '../../redux/getComments/getComments-selector';\r\nimport { selectComment } from '../../redux/setComment/setComment-selector';\r\nimport { selectUser } from '../../redux/userReducer/user-selector';\r\nimport selectMe from '../../redux/getMe/getMe-reducer';\r\n\r\nimport {\r\n  startUpdateComment,\r\n  startDeleteComment\r\n} from '../../redux/updateDeleteCommentReducer/updateDeleteComment-actions';\r\nimport './getCommentsComp.scss';\r\n\r\nconst CommentsComp = ({\r\n  comments,\r\n  comment,\r\n  me,\r\n  user,\r\n  getCommentsStart,\r\n  startUpdateComment,\r\n  startDeleteComment,\r\n\r\n  ...props\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  let [dis, setDisabled] = useState(true);\r\n  const [text, setText] = useState(null);\r\n  const placeId = useParams().placeId;\r\n\r\n  let commentMeId;\r\n  if (me.user.currentUser) {\r\n    commentMeId = me.user.currentUser.data.user._id;\r\n  }\r\n\r\n  let com;\r\n  if (comments.comments) {\r\n    com = comments.comments.data;\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCommentsStart(props.placeId);\r\n  }, [getCommentsStart, props.placeId, comment]);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    getCommentsStart(props.placeId);\r\n    setDisabled(true);\r\n  };\r\n\r\n  const handleChangeText = e => {\r\n    if (e.target.value) {\r\n      setText(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={show}\r\n        header=\"Comment\"\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<CustomButton handleClick={handleClose}>CLOSE</CustomButton>}\r\n      >\r\n        {message}\r\n      </Modal>\r\n      {com\r\n        ? com.map(co => (\r\n            <ul key={co._id}>\r\n              {co.place === props.placeId ? (\r\n                <li className=\"li-element\">\r\n                  <h3 className=\"li-element\">\r\n                    <textarea\r\n                      className={`${dis ? 'is-shown' : 'is-hidden'}`}\r\n                      rows=\"5\"\r\n                      cols=\"50\"\r\n                      name=\"comment\"\r\n                      disabled={dis}\r\n                      defaultValue={co.comment}\r\n                      onChange={handleChangeText}\r\n                      autoFocus\r\n                    />\r\n                  </h3>\r\n\r\n                  <h3 style={{ color: '#1c9aae' }}>{co.author.name}</h3>\r\n                  <p>Comment author Rating for this place</p>\r\n\r\n                  <Rater\r\n                    className=\"react-rater-star-comp react-rater-comp\"\r\n                    interactive={false}\r\n                    total={6}\r\n                    rating={co.rating}\r\n                  />\r\n                  {me ? (\r\n                    <div className=\"delete-update-comment\">\r\n                      {commentMeId === co.author._id ? (\r\n                        <span\r\n                          className=\"update-comment\"\r\n                          onClick={e => {\r\n                            const commentId = co._id;\r\n                            const data = { commentId, placeId, text };\r\n\r\n                            if (text) {\r\n                              startUpdateComment(data);\r\n                              setShow(true);\r\n                            }\r\n\r\n                            setDisabled(false);\r\n                            setMessage('The comment was updated!');\r\n                          }}\r\n                        >\r\n                          Update Comment\r\n                        </span>\r\n                      ) : null}\r\n                      {commentMeId === co.author.id ? (\r\n                        <span\r\n                          className=\"delete-comment\"\r\n                          onClick={() => {\r\n                            const commentId = co._id;\r\n                            const data = { commentId, placeId };\r\n                            setShow(true);\r\n                            setMessage(\r\n                              'The comment was deleted. Refresh the page to no longer see it!'\r\n                            );\r\n                            startDeleteComment(data);\r\n                          }}\r\n                        >\r\n                          Delete Comment\r\n                        </span>\r\n                      ) : null}\r\n                    </div>\r\n                  ) : null}\r\n                </li>\r\n              ) : null}\r\n            </ul>\r\n          ))\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  comments: selectComments,\r\n  comment: selectComment,\r\n  user: selectUser,\r\n  me: selectMe\r\n});\r\n\r\nexport const mapDispatchToProps = dispatch => ({\r\n  getCommentsStart: placeId => dispatch(getCommentsStart(placeId)),\r\n  startUpdateComment: data => dispatch(startUpdateComment(data)),\r\n  startDeleteComment: data => dispatch(startDeleteComment(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsComp);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectPlaceItem } from '../../../redux/fetchPlace/fetchPlace-selector';\r\nimport { startUpdatePlace } from '../../../redux/updateDelete/updateDelete-actions';\r\nimport Modal from '../../../components/reuseble/modal/modal';\r\nimport CustomButton from '../../../components/reuseble/custom-button/custom-button';\r\n\r\nimport { deletePlace } from '../../../redux/setPlace/setPlace-action';\r\nimport './update-place.scss';\r\n\r\nconst UpdateDeletePlace = ({ place, deletePlace, history }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [confirm, setConfirm] = useState(false);\r\n\r\n  const deletePlaceHandler = () => {\r\n    setConfirm(true);\r\n  };\r\n  const handleModal = () => {\r\n    deletePlace(place.id);\r\n    setShow(true);\r\n    setMessage('ARE YOU SURE YOU WANT TO DELETE THIS PLACE?');\r\n  };\r\n  const handleModalExit = () => {\r\n    setConfirm(false);\r\n    //setShow(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setShow(false);\r\n    setConfirm(false);\r\n    setMessage('The place was deleted!');\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"update-container\">\r\n      <Modal\r\n        show={confirm}\r\n        header=\"Delete Place?\"\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<CustomButton handleClick={handleModal}>YES</CustomButton>}\r\n        secondButton={\r\n          <CustomButton handleClick={handleModalExit}>NO</CustomButton>\r\n        }\r\n      >\r\n        {message}\r\n      </Modal>\r\n      <Modal\r\n        show={show}\r\n        header=\"Place Deleted\"\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <CustomButton handleClick={handleModalClose}>CLOSE</CustomButton>\r\n        }\r\n      >\r\n        \"The Place was deleted!\"\r\n      </Modal>\r\n      <CustomButton\r\n        handleClick={() => history.push(`/update-place/${place.id}`)}\r\n      >\r\n        Update Place\r\n      </CustomButton>\r\n      <CustomButton handleClick={deletePlaceHandler}>Delete Place</CustomButton>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = createStructuredSelector({\r\n  place: selectPlaceItem\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  startUpdatePlace: placeData => dispatch(startUpdatePlace(placeData)),\r\n  deletePlace: placeId => dispatch(deletePlace(placeId))\r\n});\r\n\r\nconst UpdateDeletePlaceWithRouter = withRouter(UpdateDeletePlace);\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UpdateDeletePlaceWithRouter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Zoom from 'react-medium-image-zoom';\r\nimport 'react-medium-image-zoom/dist/styles.css';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport StarRate from './star-rate/star-rate';\r\n\r\nimport { selectPlaceItem } from '../../redux/fetchPlace/fetchPlace-selector';\r\nimport Comment from '../../components/comment/comment';\r\nimport PlaceIframe from './place-iframe/place-iframe';\r\nimport AuthorName from './author-name/author-name';\r\nimport CommentsComp from '../../components/getCommentsComp/getCommentsComp';\r\nimport UpdateDeletePlace from './update-place/update-place';\r\nimport CustomButton from '../../components/reuseble/custom-button/custom-button';\r\nimport { selectUser } from '../../redux/userReducer/user-selector';\r\nimport Spinner from '../../components/spinner/spinner';\r\n//import runtimeEnv from '@mars/heroku-js-runtime-env';\r\nimport './place.scss';\r\nconst urlImage = '${url}';\r\n\r\nconst Place = ({ place, currentUser, history }) => {\r\n  let lat, lng;\r\n\r\n  try {\r\n    if (place.position) {\r\n      [lat, lng] = place.position.coordinates;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    history.push('/');\r\n  }\r\n\r\n  const handleChange = () => {};\r\n  const handleClick = () => {\r\n    if (lat && lng) {\r\n      window.location.assign(`https://google.com/maps?q=${lng},${lat}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {place ? (\r\n        <div className=\"place-container\">\r\n          <div className=\"google-map-container place-option\">\r\n            <div className=\"place-option \">\r\n              <h2>{place.name}</h2>\r\n            </div>\r\n            <div className=\"place-option\">\r\n              <CustomButton handleClick={handleClick}>\r\n                Take me There\r\n              </CustomButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"place-option\">\r\n            <PlaceIframe />\r\n          </div>\r\n          <div className=\"place-option\">\r\n            {place.images ? (\r\n              <div className=\"place-option place-image-option\">\r\n                {place.images[0] ? (\r\n                  <Zoom>\r\n                    <img\r\n                      className=\"img-place\"\r\n                      src={`${urlImage}/api/v1/img/places/${place.images[0]}`}\r\n                      alt=\"image1\"\r\n                      width=\"200\"\r\n                    />\r\n                  </Zoom>\r\n                ) : null}\r\n\r\n                {place.images[1] ? (\r\n                  <Zoom>\r\n                    <img\r\n                      className=\"img-place\"\r\n                      src={`${urlImage}/api/v1/img/places/${place.images[1]}`}\r\n                      alt=\"image2\"\r\n                      width=\"200\"\r\n                    />\r\n                  </Zoom>\r\n                ) : null}\r\n\r\n                {place.images[2] ? (\r\n                  <Zoom>\r\n                    <img\r\n                      className=\"img-place\"\r\n                      src={`${urlImage}/api/v1/img/places/${place.images[2]}`}\r\n                      alt=\"image3\"\r\n                      width=\"200\"\r\n                    />\r\n                  </Zoom>\r\n                ) : null}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"place-option\">\r\n            <h3>{place.description}</h3>\r\n          </div>\r\n          <div className=\"place-option\">\r\n            <h2>Place Rataing Average</h2>\r\n            <StarRate />\r\n          </div>\r\n          <div className=\"place-option\">\r\n            <AuthorName />\r\n          </div>\r\n          <div>{currentUser ? <UpdateDeletePlace /> : null}</div>\r\n          <div className=\"place-option\">\r\n            <CommentsComp placeId={place._id} />\r\n          </div>\r\n          <div className=\"place-option\">\r\n            <h3>comments</h3>\r\n            {!currentUser ? (\r\n              <h2>Please login to comment!</h2>\r\n            ) : (\r\n              <div>\r\n                <Comment id={place._id} onChange={handleChange} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  place: selectPlaceItem,\r\n  currentUser: selectUser\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(Place));\r\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/reuseble/custom-button/custom-button.js","utils/validators.js","components/reuseble/input-form/input-form.js","redux/passwordResset/passwordResset-selector.js","components/password-resset-form/password-resset-form.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","CustomButton","children","otherProps","className","disabled","onClick","handleClick","VALIDATOR_MINLENGTH","val","type","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","FormInput","label","useReducer","inputState","dispatch","id","onInput","useEffect","handleChange","e","touchHandler","cond1","cond2","classesInput","join","element","onChange","onBlur","rows","classes","texterror","passwordRessetSelector","createSelector","passwords","mapStateToProps","createStructuredSelector","pass","connect","passwordRessetStart","data","signOutStart","useState","password","setPassword","passwordConfirm","setPasswordConfirm","genValid","setGenValid","history","useHistory","status","push","token","useParams","handleInput","useCallback","handleSubmit","a","preventDefault","onSubmit","required"],"mappings":"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","file":"static/js/15.77a248cf.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react';\r\n\r\nimport './custom-button.scss';\r\n\r\nconst CustomButton = ({ children, ...otherProps }) => {\r\n  return (\r\n    <button\r\n      className={`${otherProps.disabled ? 'disabled' : ''} custom-button`}\r\n      onClick={otherProps.handleClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\n\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\r\nimport { validate } from '../../../utils/validators';\r\n\r\nimport './input-form.scss';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case 'TOUCH':\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst FormInput = ({ label, ...otherProps }) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: '',\r\n    isTouched: false,\r\n    isValid: false,\r\n  });\r\n\r\n  const { id, onInput } = otherProps;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const handleChange = (e) => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: e.target.value,\r\n      validators: otherProps.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({ type: 'TOUCH' });\r\n  };\r\n\r\n  const cond1 = `${inputState.value.length > 0 ? 'shrink' : ''}`;\r\n  const cond2 = `${\r\n    !inputState.isValid && inputState.isTouched ? 'danger' : ''\r\n  } `;\r\n  const cond3 = 'form-input-label';\r\n  const cond4 = 'form-input';\r\n  const classesInput = [cond4, cond2].join(' ');\r\n\r\n  const element =\r\n    otherProps.element === 'input' ? (\r\n      <input\r\n        className={classesInput}\r\n        id={otherProps.id}\r\n        onChange={handleChange}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n        type={otherProps.id}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        className={classesInput}\r\n        id={otherProps.id}\r\n        onChange={handleChange}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n        type={otherProps.id}\r\n        rows={otherProps.rows || 3}\r\n      />\r\n    );\r\n\r\n  const classes = [cond1, cond2, cond3].join(' ');\r\n\r\n  return (\r\n    <div className=\"group\">\r\n      {element}\r\n      {!inputState.isValid ? (\r\n        <p className={cond2}>{otherProps.texterror}</p>\r\n      ) : null}\r\n\r\n      {label ? <label className={classes}>{label}</label> : null}\r\n    </div>\r\n  );\r\n};\r\nexport default FormInput;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectPasswordRessetSelector = state => state.passwords;\r\n\r\nexport const passwordRessetSelector = createSelector(\r\n  [selectPasswordRessetSelector],\r\n  passwords => passwords.passwords\r\n);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport FormInput from '../reuseble/input-form/input-form';\r\nimport CustomButton from '../reuseble/custom-button/custom-button';\r\nimport { VALIDATOR_MINLENGTH } from '../../utils/validators';\r\nimport { passwordRessetStart } from '../../redux/passwordResset/passwordResset-actions';\r\nimport { signOutStart } from '../../redux//userReducer/user-actions';\r\nimport { passwordRessetSelector } from '../../redux/passwordResset/passwordResset-selector';\r\nimport './password-resset-form.scss';\r\n\r\nconst FormRessetPassword = ({\r\n  passwordRessetStart,\r\n\r\n  signOutStart,\r\n  pass\r\n}) => {\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n  const [genValid, setGenValid] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  if (pass.status === 'success') {\r\n    signOutStart();\r\n    history.push('/');\r\n  }\r\n  const token = useParams().token;\r\n\r\n  const handleInput = useCallback((id, value, isValid) => {\r\n    setPassword(value);\r\n    setPasswordConfirm(value);\r\n    setGenValid(isValid);\r\n  }, []);\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    passwordRessetStart({\r\n      password,\r\n      passwordConfirm,\r\n      token\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"password-resset-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          id=\"password\"\r\n          element=\"input\"\r\n          label=\"New Password\"\r\n          texterror=\"Please enter a password wit at least 8 characters\"\r\n          validators={[VALIDATOR_MINLENGTH(8)]}\r\n          onInput={handleInput}\r\n          required={true}\r\n        />\r\n        <FormInput\r\n          id=\"text\"\r\n          element=\"input\"\r\n          label=\"Repeat Password\"\r\n          texterror=\"Passwords must be the same\"\r\n          validators={[VALIDATOR_MINLENGTH(8)]}\r\n          onInput={handleInput}\r\n          required={true}\r\n        />\r\n        <div className=\"button-comment-container\">\r\n          <CustomButton type=\"submit\" disabled={!genValid}>\r\n            Reset Password\r\n          </CustomButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  pass: passwordRessetSelector\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  passwordRessetStart: data => dispatch(passwordRessetStart(data)),\r\n  signOutStart: () => dispatch(signOutStart())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormRessetPassword);\r\n"],"sourceRoot":""}